@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes full-width {
    0%{
        max-width:0;
    }100%{
        max-width:100%;
    }
}



@layer components{
    .btn{
        @apply relative sm:py-2 sm:px-4 border border-primary transition-transform duration-200;
        @apply after:content-[''] after:absolute after:-z-[1] after:left-1.5 after:top-1.5 after:border after:border-primary/80 after:w-full after:h-full after:transition-all after:duration-300;
        @apply hover:bg-primary hover:text-black after:hover:left-1 after:hover:top-1;
        @apply text-sm;
        @apply py-1.5 px-2;
    }    
    
    .btn--black{
        @apply bg-black;
    }

    .full-width{
        animation:full-width 500ms ease forwards;
    }

    /* ---hamburger基本樣式--- */
    .hamburger{
        @apply relative w-full h-0.5 bg-white rounded-lg;
    }

    .hamburger::before,
    .hamburger::after{
        @apply rounded-lg;
        content:'';
        position: absolute;
        left: 0;
        width: 100%;
        height: 2px;
        background: white;
    }

    .hamburger::before{
        top: -8px;
        transform: rotate(0deg);
    }

    .hamburger::after{
        top: 8px;
        transform: rotate(-0deg);
    }
}


@layer utilities{
    /* ---hide & show--- */
    .hide{
        @apply invisible opacity-0;
    }

    .show{
        @apply visible opacity-100;
    }


    /* ---hamburger-expand--- */
    .hamburger-expand{
        @apply bg-transparent transition-colors duration-200;
        @apply before:top-0 before:rotate-45;
        @apply after:top-0 after:-rotate-45;
    }

    .hamburger-expand{
        transition: background-color 200ms ease-in 200ms;
    }

    .hamburger-expand::before,
    .hamburger-expand::after {
        transition: top 300ms ease-in 200ms, transform 600ms ease-in, width ease-in 500ms; 
    }


    /* ---hamburger-collapse--- */
    .hamburger-collapse{
        @apply before:-top-2 before:rotate-0 ;
        @apply after:top-2 after:-rotate-0 ;
    } 

    .hamburger-collapse{
        transition: background-color 200ms ease-in 200ms;
    }

    .hamburger-collapse::before,
    .hamburger-collapse::after {
        transition: top 300ms ease-in, transform 500ms ease-in; 
    }

    /* hamburger change to arrow */
    .hamburger-arrow {
        @apply bg-transparent transition-all;
        @apply before:-rotate-45 before:-top-1.5 before:w-3/4;
        @apply after:rotate-45 after:top-1.5 after:w-3/4;
    }

    .hamburger-arrow::before, 
    .hamburger-arrow::after {
        transition: top 500ms ease-in, transform 500ms ease-in, width ease-in 200ms;
    }

    .animation-fade-in {
        animation: fade-in 500ms forwards;
    }

    .animation-fade-out {
        animation: fade-out 500ms forwards;
    }

    /* 曾嘗試想用transition的方式，但:
        1. 對於transition-opacity來說，對於display的切換是無效果的，除非要使用transitionend。 
        2. 更深層的問題，對於首頁那些本來早已存在的東西，需要使用類似漢堡條的處理方式來防止F5刷新閃爍。
    */
    

    /* .fadein{
        @apply transition-opacity duration-500 opacity-100;
    }

    .fadeout{
        @apply transition-opacity duration-500 opacity-0;
    } */
}

@keyframes fade-in{
    0%{
        @apply opacity-0;
    }

    100%{
        @apply opacity-100;
    }
}

@keyframes fade-out{
    0%{
        @apply opacity-100;
    }

    100%{
        @apply opacity-0;
    }
}
/* 
fadein、fadeout的問題有待解決......

現在的問題出在title被告知其需要監聽animationend，如果發現任何animationend就執行 style_showMenu()、style_hideTitle();
現在要想想要怎麼解決。

想到的方法:
方法01 將title的監聽設定成用完就丟，但前提是title的callback function是匿名，我砍不掉匿名函式，至少需要將其取個名字。
方法02 使用判斷式的方式，使其不要看到任何的animationend都執行style_showMenu()、style_hideTitle()，而是要看特定的條件，什麼時候可以執行，然後執行什麼，都設定好。
 */
